


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RESET , DATA, READONLY ;the cod
                                                            e should be saved i
                                                            n RAM
    2 00000000                 EXPORT           __Vectors
    3 00000000         __Vectors
    4 00000000 10001000        DCD              0X10001000  ;stack pointer valu
                                                            e when stack is emp
                                                            ty 
    5 00000004 00000000        DCD              Reset_Handler ;reset vector
    6 00000008                 ALIGN
    7 00000008                 AREA             mycode,CODE,READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           Reset_Handler
   10 00000000         Reset_Handler                        ;till here info giv
                                                            en to the compiler 
                                                            
   11 00000000 F04F 0010       MOV              R0 , #0X10  ;transfer to (R0 re
                                                            gister) , # (addres
                                                            sing mode) ,MOV whe
                                                            n 8 bit data;0X--- 
                                                            is hexadecimal data
                                                              
   12 00000004 F04F 010A       MOV              R1 , #10
   13 00000008 F102 0221       ADD              R2 , #33
   14 0000000C 440A            ADD              R2 , R1
   15 0000000E F04F 3422       LDR              R4 , =0X22222222 ;LDR(load data
                                                             register) when 32 
                                                            bit 
   16 00000012         STOP
   17 00000012 E7FE            B                STOP
   18 00000014 0000000A 
                       NUM     EQU              10
   19 00000014 00000008 
              00123456 
              020F76D3 SRC     DCD              8 , 0X123456 , 34567891
   20 00000020                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=practice
.d -opractice.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\AR
M\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=practice.lst practice.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 1 in file practice.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 3 in file practice.asm
   Uses
      At line 2 in file practice.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 10 in file practice.asm
   Uses
      At line 5 in file practice.asm
      At line 9 in file practice.asm

SRC 00000014

Symbol: SRC
   Definitions
      At line 19 in file practice.asm
   Uses
      None
Comment: SRC unused
STOP 00000012

Symbol: STOP
   Definitions
      At line 16 in file practice.asm
   Uses
      At line 17 in file practice.asm
Comment: STOP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 7 in file practice.asm
   Uses
      None
Comment: mycode unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NUM 0000000A

Symbol: NUM
   Definitions
      At line 18 in file practice.asm
   Uses
      None
Comment: NUM unused
1 symbol
338 symbols in table
